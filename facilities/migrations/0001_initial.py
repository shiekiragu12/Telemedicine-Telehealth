# Generated by Django 4.1.5 on 2023-06-15 13:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('mainapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('note', models.TextField()),
                ('status', models.BooleanField(default=False)),
                ('date', models.DateTimeField()),
                ('start_time', models.CharField(default='', max_length=10)),
                ('end_time', models.CharField(default='', max_length=10)),
                ('other_condition', models.CharField(blank=True, max_length=256, null=True)),
                ('consultation_type', models.CharField(max_length=10, null=True)),
                ('video_link', models.CharField(blank=True, max_length=455, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True)),
                ('factsheet', models.TextField(blank=True, null=True)),
                ('pathogen', models.TextField(blank=True, null=True)),
                ('clinical_features', models.TextField(blank=True, null=True)),
                ('transmission', models.TextField(blank=True, null=True)),
                ('diagnosis', models.TextField(blank=True, null=True)),
                ('treatment', models.TextField(blank=True, null=True)),
                ('prevention', models.TextField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Constituency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=400)),
                ('slug', models.SlugField(blank=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('available', models.BooleanField(default=True)),
                ('about', models.TextField()),
                ('license_number', models.CharField(blank=True, max_length=30, null=True)),
                ('regulatory_body', models.CharField(blank=True, max_length=100, null=True)),
                ('license_file', models.FileField(null=True, upload_to='providers/files/')),
                ('is_verified', models.BooleanField(default=False)),
                ('display_on_homepage', models.BooleanField(default=False)),
                ('display_on_mental_health', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('has_read_terms', models.BooleanField(default=False)),
                ('has_signed_contract', models.BooleanField(default=False)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('description', models.TextField()),
                ('date', models.DateTimeField()),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_encounters', to='facilities.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('facility_code', models.CharField(blank=True, max_length=30, null=True)),
                ('owner_name', models.TextField(blank=True, null=True)),
                ('facility_kind', models.CharField(blank=True, choices=[('pharmacy', 'Pharmacy'), ('nutraceutical', 'Nutraceuticals'), ('clinic', 'Clinic'), ('hospital', 'Hospital')], max_length=100, null=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('latitude', models.CharField(default='', max_length=100)),
                ('longitude', models.CharField(default='', max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('email', models.CharField(blank=True, default='', max_length=100)),
                ('contact_no', models.CharField(blank=True, default='', max_length=100)),
                ('address', models.CharField(blank=True, default='', max_length=300)),
                ('authorized', models.BooleanField(default=False)),
                ('logo', models.FileField(blank=True, null=True, upload_to='facilities/files/logo/')),
                ('cover_image', models.FileField(blank=True, null=True, upload_to='facilities/files/covers/')),
                ('home_page_content', models.TextField(blank=True)),
                ('about_page_content', models.TextField(blank=True)),
                ('online_page_content', models.TextField(blank=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('constituency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.constituency')),
                ('county', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.county')),
            ],
        ),
        migrations.CreateModel(
            name='FacilitySpeciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Illness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('blood_group', models.CharField(blank=True, max_length=5, null=True)),
                ('dob', models.DateField()),
                ('account_sharable', models.BooleanField(default=False)),
                ('reason_for_signup', models.TextField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('facilities', models.ManyToManyField(blank=True, related_name='facilities', to='facilities.facility')),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients', to='facilities.facility')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('prescription', models.TextField()),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_prescriptions', to='facilities.doctor')),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.facility')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_prescriptions', to='facilities.patient')),
            ],
        ),
        migrations.CreateModel(
            name='QualificationCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialityField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('designation', models.TextField()),
                ('education', models.TextField()),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.facility')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SharedPrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facilities.facility')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facilities.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('description', models.TextField()),
                ('long_description', models.TextField(blank=True, null=True)),
                ('charges', models.FloatField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('image', models.ImageField(null=True, upload_to='services/images/')),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facilities.servicecategory')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.doctor')),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.facility')),
                ('tags', models.ManyToManyField(blank=True, to='mainapp.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('institution', models.CharField(max_length=100)),
                ('year', models.CharField(max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('file', models.FileField(null=True, upload_to='doctors/files/')),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.qualificationcourse')),
                ('doctor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to='facilities.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('file', models.FileField(upload_to='facilities/files/medical/')),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment_medical_files', to='facilities.appointment')),
                ('encounter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='encounter_medical_files', to='facilities.encounter')),
            ],
        ),
        migrations.AddField(
            model_name='facility',
            name='facility_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.facilitytype'),
        ),
        migrations.AddField(
            model_name='facility',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='facility',
            name='shared_prescriptions',
            field=models.ManyToManyField(blank=True, related_name='shared_encounters', to='facilities.prescription'),
        ),
        migrations.AddField(
            model_name='facility',
            name='specialities',
            field=models.ManyToManyField(blank=True, to='facilities.facilityspeciality'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='facility',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='encounter',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_encounters', to='facilities.patient'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='facilities',
            field=models.ManyToManyField(blank=True, to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='specialities',
            field=models.ManyToManyField(blank=True, to='facilities.facilityspeciality'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='speciality_field',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.specialityfield'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='constituency',
            name='county',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.county'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='condition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='facilities.illness'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='doctor_appointments', to='facilities.doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='facility',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='facility_appointments', to='facilities.facility'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_appointments', to='facilities.patient'),
        ),
    ]
